<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="XtfHeaderChannelInfoBeamsPerArray" xml:space="preserve">
    <value>Punti per gruppo</value>
  </data>
  <data name="XtfHeaderChannelInfoBeamWidth" xml:space="preserve">
    <value>Larghezza punto</value>
  </data>
  <data name="XtfHeaderChannelInfoBytesPerSample" xml:space="preserve">
    <value>Byte per campione</value>
  </data>
  <data name="XtfHeaderChannelInfoChannelName" xml:space="preserve">
    <value>Nome canale</value>
  </data>
  <data name="XtfHeaderChannelInfoCorrectionFlags" xml:space="preserve">
    <value>Correzzioni</value>
  </data>
  <data name="XtfHeaderChannelInfoFrequency" xml:space="preserve">
    <value>Frequenza</value>
  </data>
  <data name="XtfHeaderChannelInfoHorizontalBeamAngle" xml:space="preserve">
    <value>Angolo orizzontale punto</value>
  </data>
  <data name="XtfHeaderChannelInfoOffsetPitch" xml:space="preserve">
    <value>Offset beccheggio</value>
  </data>
  <data name="XtfHeaderChannelInfoOffsetRoll" xml:space="preserve">
    <value>Offset rollio</value>
  </data>
  <data name="XtfHeaderChannelInfoOffsetX" xml:space="preserve">
    <value>Offset X</value>
  </data>
  <data name="XtfHeaderChannelInfoOffsetY" xml:space="preserve">
    <value>Offset Y</value>
  </data>
  <data name="XtfHeaderChannelInfoOffsetYaw" xml:space="preserve">
    <value>Offset sbandamento</value>
  </data>
  <data name="XtfHeaderChannelInfoOffsetZ" xml:space="preserve">
    <value>Offset Z</value>
  </data>
  <data name="XtfHeaderChannelInfoSamplesPerChannel" xml:space="preserve">
    <value>Campioni per canale</value>
  </data>
  <data name="XtfHeaderChannelInfoSubChannelNumber" xml:space="preserve">
    <value>Numero di sub canale</value>
  </data>
  <data name="XtfHeaderChannelInfoTiltAngle" xml:space="preserve">
    <value>Angolo di inclinazione</value>
  </data>
  <data name="XtfHeaderChannelInfoTypeOfChannel" xml:space="preserve">
    <value>Tipo di canale</value>
  </data>
  <data name="XtfHeaderChannelInfoUnipolar" xml:space="preserve">
    <value>Unipolare</value>
  </data>
  <data name="XtfHeaderChannelInfoVoltScale" xml:space="preserve">
    <value>Scala voltaggio</value>
  </data>
  <data name="XtfHeaderFileFormat" xml:space="preserve">
    <value>Formato del file</value>
  </data>
  <data name="XtfHeaderMRUOffsetPitch" xml:space="preserve">
    <value>MRU offset beccheggio</value>
  </data>
  <data name="XtfHeaderMRUOffsetRoll" xml:space="preserve">
    <value>MRU offset rollio</value>
  </data>
  <data name="XtfHeaderMRUOffsetX" xml:space="preserve">
    <value>MRU offset X</value>
  </data>
  <data name="XtfHeaderMRUOffsetY" xml:space="preserve">
    <value>MRU offset Y</value>
  </data>
  <data name="XtfHeaderMRUOffsetYaw" xml:space="preserve">
    <value>MRU offset sbandamento</value>
  </data>
  <data name="XtfHeaderMRUOffsetZ" xml:space="preserve">
    <value>MRU offset Z</value>
  </data>
  <data name="XtfHeaderNavigationCoordinateUnits" xml:space="preserve">
    <value>Unità delle coordinate di navigazione</value>
  </data>
  <data name="XtfHeaderNavigationLatency" xml:space="preserve">
    <value>Latenza di navigazione</value>
  </data>
  <data name="XtfHeaderNavigationOffsetX" xml:space="preserve">
    <value>Navigazione offset X</value>
  </data>
  <data name="XtfHeaderNavigationOffsetY" xml:space="preserve">
    <value>Navigazione offset Y</value>
  </data>
  <data name="XtfHeaderNavigationOffsetYaw" xml:space="preserve">
    <value>Navigazione offset sbandamento</value>
  </data>
  <data name="XtfHeaderNavigationOffsetZ" xml:space="preserve">
    <value>Navigazione offset Z</value>
  </data>
  <data name="XtfHeaderNoteString" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="XtfHeaderNumberOfBathymetryChannels" xml:space="preserve">
    <value>Numero di canali batimetrici</value>
  </data>
  <data name="XtfHeaderNumberOfEchoStrengthChannels" xml:space="preserve">
    <value>Numero di canali di eco forza</value>
  </data>
  <data name="XtfHeaderNumberOfForwardLookArrays" xml:space="preserve">
    <value>Numero di scansioni frontali</value>
  </data>
  <data name="XtfHeaderNumberOfInterferometryChannels" xml:space="preserve">
    <value>Numero di canali interferometrici</value>
  </data>
  <data name="XtfHeaderNumberOfSnippetChannels" xml:space="preserve">
    <value>Numero di canali Snippet</value>
  </data>
  <data name="XtfHeaderNumberOfSonarChannels" xml:space="preserve">
    <value>Numero di canali Sonar</value>
  </data>
  <data name="XtfHeaderRecordingProgramName" xml:space="preserve">
    <value>Nome del programma di registrazione</value>
  </data>
  <data name="XtfHeaderRecordingProgramVersion" xml:space="preserve">
    <value>Versione del programma di registrazione</value>
  </data>
  <data name="XtfHeaderReferencePointHeight" xml:space="preserve">
    <value>Altezza del punto di riferimento</value>
  </data>
  <data name="XtfHeaderSonarName" xml:space="preserve">
    <value>Nome del Sonar</value>
  </data>
  <data name="XtfHeaderSonarType" xml:space="preserve">
    <value>Tipo di Sonar</value>
  </data>
  <data name="XtfHeaderSystemType" xml:space="preserve">
    <value>Tipo di sistema</value>
  </data>
  <data name="XtfHeaderThisFileName" xml:space="preserve">
    <value>Nome di questo file</value>
  </data>
  <data name="XtfPacketGroupHeaderType" xml:space="preserve">
    <value>Tipo di pacchetto</value>
  </data>
  <data name="XtfPacketGroupSubChannelNumber" xml:space="preserve">
    <value>Numero di sub canale</value>
  </data>
  <data name="XtfPacketGroupNumberChannelsToFollow" xml:space="preserve">
    <value>Numero di canali che seguono</value>
  </data>
  <data name="XtfPacketGroupNumberBytesThisRecord" xml:space="preserve">
    <value>Numero di byte in questo pacchetto</value>
  </data>
  <data name="XtfPacketGroupPacketTime" xml:space="preserve">
    <value>Tempo pacchetto</value>
  </data>
  <data name="XtfPacketGroupCount" xml:space="preserve">
    <value>Numero di pacchetti</value>
  </data>
</root>